<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="110" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2019-02-27" time="15:23:16">
  <environment user="cmart" machine-name="CMARTBOOK" cwd="C:\Users\cmart\Source\MIMDSC" user-domain="REDMOND" platform="Microsoft Windows 10 Enterprise|C:\WINDOWS|\Device\Harddisk0\Partition4" nunit-version="2.5.8.0" os-version="10.0.17763" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Success" success="True" time="73.2661" asserts="0">
    <results>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncExportAttributeFlowRule" executed="True" result="Success" success="True" time="7.5824" asserts="0" description="DscResource Designer Validation for MimSyncExportAttributeFlowRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncExportAttributeFlowRule.Test-xDscResource Should Pass" time="7.2145" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncExportAttributeFlowRule.Test-xDscSchema Should Pass" time="0.3679" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncFilterRule" executed="True" result="Success" success="True" time="3.7935" asserts="0" description="DscResource Designer Validation for MimSyncFilterRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncFilterRule.Test-xDscResource Should Pass" time="3.3612" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncFilterRule.Test-xDscSchema Should Pass" time="0.4323" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncImportAttributeFlowRule" executed="True" result="Success" success="True" time="2.8229" asserts="0" description="DscResource Designer Validation for MimSyncImportAttributeFlowRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncImportAttributeFlowRule.Test-xDscResource Should Pass" time="2.45" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncImportAttributeFlowRule.Test-xDscSchema Should Pass" time="0.373" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncImportAttributePrecedence" executed="True" result="Success" success="True" time="2.5436" asserts="0" description="DscResource Designer Validation for MimSyncImportAttributePrecedence">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncImportAttributePrecedence.Test-xDscResource Should Pass" time="2.1971" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncImportAttributePrecedence.Test-xDscSchema Should Pass" time="0.3465" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncJoinRule" executed="True" result="Success" success="True" time="2.6984" asserts="0" description="DscResource Designer Validation for MimSyncJoinRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncJoinRule.Test-xDscResource Should Pass" time="2.2562" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncJoinRule.Test-xDscSchema Should Pass" time="0.4422" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMaData" executed="True" result="Success" success="True" time="4.382" asserts="0" description="DscResource Designer Validation for MimSyncMaData">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMaData.Test-xDscResource Should Pass" time="3.7196" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMaData.Test-xDscSchema Should Pass" time="0.6623" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMAPartitionData" executed="True" result="Success" success="True" time="3.0498" asserts="0" description="DscResource Designer Validation for MimSyncMAPartitionData">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMAPartitionData.Test-xDscResource Should Pass" time="2.7303" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMAPartitionData.Test-xDscSchema Should Pass" time="0.3195" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMVAttributeType" executed="True" result="Success" success="True" time="2.5344" asserts="0" description="DscResource Designer Validation for MimSyncMVAttributeType">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMVAttributeType.Test-xDscResource Should Pass" time="2.2239" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMVAttributeType.Test-xDscSchema Should Pass" time="0.3104" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMVDeletionRule" executed="True" result="Success" success="True" time="2.7418" asserts="0" description="DscResource Designer Validation for MimSyncMVDeletionRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMVDeletionRule.Test-xDscResource Should Pass" time="2.2157" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMVDeletionRule.Test-xDscSchema Should Pass" time="0.5262" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMVObjectType" executed="True" result="Success" success="True" time="3.3239" asserts="0" description="DscResource Designer Validation for MimSyncMVObjectType">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMVObjectType.Test-xDscResource Should Pass" time="2.9952" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMVObjectType.Test-xDscSchema Should Pass" time="0.3287" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncMVOptions" executed="True" result="Success" success="True" time="2.9632" asserts="0" description="DscResource Designer Validation for MimSyncMVOptions">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncMVOptions.Test-xDscResource Should Pass" time="2.6399" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncMVOptions.Test-xDscSchema Should Pass" time="0.3232" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncProjectionRule" executed="True" result="Success" success="True" time="3.233" asserts="0" description="DscResource Designer Validation for MimSyncProjectionRule">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncProjectionRule.Test-xDscResource Should Pass" time="2.9244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncProjectionRule.Test-xDscSchema Should Pass" time="0.3086" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="DscResource Designer Validation for MimSyncRunProfile" executed="True" result="Success" success="True" time="2.7148" asserts="0" description="DscResource Designer Validation for MimSyncRunProfile">
        <results>
          <test-case description="Test-xDscResource Should Pass" name="DscResource Designer Validation for MimSyncRunProfile.Test-xDscResource Should Pass" time="2.2851" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Test-xDscSchema Should Pass" name="DscResource Designer Validation for MimSyncRunProfile.Test-xDscSchema Should Pass" time="0.4297" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.7864" asserts="0" description="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="Direct EAF Rule - desired state" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Direct EAF Rule - desired state" time="0.3978" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted EAF Rule - desired state" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Scripted EAF Rule - desired state" time="0.0773" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted EAF Rule - multiple source attributes - desired state" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Scripted EAF Rule - multiple source attributes - desired state" time="0.0648" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted EAF Rule - multiple source attributes - incorrect suppress-deletion" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Scripted EAF Rule - multiple source attributes - incorrect suppress-deletion" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted EAF Rule - multiple source attributes - incorrect src-attribute" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Scripted EAF Rule - multiple source attributes - incorrect src-attribute" time="0.0608" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Constant EAF Rule - desired state" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Constant EAF Rule - desired state" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Constant EAF Rule - incorrect contant-value" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Constant EAF Rule - incorrect contant-value" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Constant EAF Rule - missing EAF rule" name="MimSyncExportAttributeFlowRule - calling Test-TargetResource Directly.Constant EAF Rule - missing EAF rule" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncExportAttributeFlowRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1531" asserts="0" description="MimSyncExportAttributeFlowRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Direct EAF Rule - desired state" name="MimSyncExportAttributeFlowRule - calling Get-TargetResource Directly.Direct EAF Rule - desired state" time="0.0654" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted EAF Rule - desired state" name="MimSyncExportAttributeFlowRule - calling Get-TargetResource Directly.Scripted EAF Rule - desired state" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Direct EAF Rule - undesirable state" name="MimSyncExportAttributeFlowRule - calling Get-TargetResource Directly.Direct EAF Rule - undesirable state" time="0.04" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncFilterRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="7.5205" asserts="0" description="MimSyncFilterRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="Scripted Filter Rule - desired state" name="MimSyncFilterRule - calling Test-TargetResource Directly.Scripted Filter Rule - desired state" time="1.9883" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted Filter Rule - undesirable state" name="MimSyncFilterRule - calling Test-TargetResource Directly.Scripted Filter Rule - undesirable state" time="1.6989" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Declared Filter Rule - desired state" name="MimSyncFilterRule - calling Test-TargetResource Directly.Declared Filter Rule - desired state" time="1.6791" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Declared Filter Rule - filter rules in wrong order" name="MimSyncFilterRule - calling Test-TargetResource Directly.Declared Filter Rule - filter rules in wrong order" time="2.1542" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncFilterRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1253" asserts="0" description="MimSyncFilterRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Scripted Filter Rule - desired state" name="MimSyncFilterRule - calling Get-TargetResource Directly.Scripted Filter Rule - desired state" time="0.0784" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted Filter Rule - undesirable state" name="MimSyncFilterRule - calling Get-TargetResource Directly.Scripted Filter Rule - undesirable state" time="0.047" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.8263" asserts="0" description="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="Direct IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Direct IAF Rule - desired state" time="0.3252" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Direct IAF Rule - rogue state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Direct IAF Rule - rogue state" time="0.0689" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Direct IAF Rule - missing IAF rule" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Direct IAF Rule - missing IAF rule" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Direct-Mapping IAF Rule - dn-mapping desired state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Direct-Mapping IAF Rule - dn-mapping desired state" time="0.0695" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Scripted IAF Rule - desired state" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted IAF Rule - missing one source attribute" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Scripted IAF Rule - missing one source attribute" time="0.0631" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted IAF Rule - missing IAF rule" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Scripted IAF Rule - missing IAF rule" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Constant IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.Constant IAF Rule - desired state" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="DN Mapping IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.DN Mapping IAF Rule - desired state" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="DN Mapping IAF Rule - incorrect DN part" name="MimSyncImportAttributeFlowRule - calling Test-TargetResource Directly.DN Mapping IAF Rule - incorrect DN part" time="0.0561" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncImportAttributeFlowRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1699" asserts="0" description="MimSyncImportAttributeFlowRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Direct IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Get-TargetResource Directly.Direct IAF Rule - desired state" time="0.0734" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted IAF Rule - desired state" name="MimSyncImportAttributeFlowRule - calling Get-TargetResource Directly.Scripted IAF Rule - desired state" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Direct EAF Rule - undesirable state" name="MimSyncImportAttributeFlowRule - calling Get-TargetResource Directly.Direct EAF Rule - undesirable state" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncImportAttributePrecedence - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.4818" asserts="0" description="MimSyncImportAttributePrecedence - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncImportAttributePrecedence - desired state" name="MimSyncImportAttributePrecedence - calling Test-TargetResource Directly.MimSyncImportAttributePrecedence - desired state" time="0.3193" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncImportAttributePrecedence - incorrect order" name="MimSyncImportAttributePrecedence - calling Test-TargetResource Directly.MimSyncImportAttributePrecedence - incorrect order" time="0.0955" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncImportAttributePrecedence - incorrect type" name="MimSyncImportAttributePrecedence - calling Test-TargetResource Directly.MimSyncImportAttributePrecedence - incorrect type" time="0.067" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncImportAttributePrecedence - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1562" asserts="0" description="MimSyncImportAttributePrecedence - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing Flow Precedence" name="MimSyncImportAttributePrecedence - calling Get-TargetResource Directly.Existing Flow Precedence" time="0.0604" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing Flow Precedence" name="MimSyncImportAttributePrecedence - calling Get-TargetResource Directly.Existing Flow Precedence" time="0.0573" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing Flow Precedence" name="MimSyncImportAttributePrecedence - calling Get-TargetResource Directly.Missing Flow Precedence" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncJoinRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="4.8107" asserts="0" description="MimSyncJoinRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="Mega Join Rule - desired state" name="MimSyncJoinRule - calling Test-TargetResource Directly.Mega Join Rule - desired state" time="2.7029" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mega Join Rule - incorrect join rule order" name="MimSyncJoinRule - calling Test-TargetResource Directly.Mega Join Rule - incorrect join rule order" time="2.1079" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncJoinRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1222" asserts="0" description="MimSyncJoinRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Missing Join Rule" name="MimSyncJoinRule - calling Get-TargetResource Directly.Missing Join Rule" time="0.0843" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Expected Join Rule" name="MimSyncJoinRule - calling Get-TargetResource Directly.Expected Join Rule" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMaData - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="3.9599" asserts="0" description="MimSyncMaData - calling Test-TargetResource Directly">
        <results>
          <test-case description="Mega MaData - desired state" name="MimSyncMaData - calling Test-TargetResource Directly.Mega MaData - desired state" time="2.1281" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mega MaData - incorrect attribute inclusion list" name="MimSyncMaData - calling Test-TargetResource Directly.Mega MaData - incorrect attribute inclusion list" time="1.8318" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMaData - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1516" asserts="0" description="MimSyncMaData - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing Management Agent" name="MimSyncMaData - calling Get-TargetResource Directly.Existing Management Agent" time="0.0808" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing Management Agent - Category" name="MimSyncMaData - calling Get-TargetResource Directly.Existing Management Agent - Category" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing Management Agent" name="MimSyncMaData - calling Get-TargetResource Directly.Missing Management Agent" time="0.034" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMAPartitionData - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.5935" asserts="0" description="MimSyncMAPartitionData - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncMAPartitionData - desired state" name="MimSyncMAPartitionData - calling Test-TargetResource Directly.MimSyncMAPartitionData - desired state" time="0.4455" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMAPartitionData - incorrect ObjectClassInclusions" name="MimSyncMAPartitionData - calling Test-TargetResource Directly.MimSyncMAPartitionData - incorrect ObjectClassInclusions" time="0.0877" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMAPartitionData - missing partition" name="MimSyncMAPartitionData - calling Test-TargetResource Directly.MimSyncMAPartitionData - missing partition" time="0.0604" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMAPartitionData - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1688" asserts="0" description="MimSyncMAPartitionData - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing Partition" name="MimSyncMAPartitionData - calling Get-TargetResource Directly.Existing Partition" time="0.0884" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing Partition - Selected" name="MimSyncMAPartitionData - calling Get-TargetResource Directly.Existing Partition - Selected" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing Partition" name="MimSyncMAPartitionData - calling Get-TargetResource Directly.Missing Partition" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVAttributeType - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.452" asserts="0" description="MimSyncMVAttributeType - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncMVAttributeType - desired state" name="MimSyncMVAttributeType - calling Test-TargetResource Directly.MimSyncMVAttributeType - desired state" time="0.3261" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVAttributeType - incorrect Syntax attributes" name="MimSyncMVAttributeType - calling Test-TargetResource Directly.MimSyncMVAttributeType - incorrect Syntax attributes" time="0.0498" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVAttributeType - incorrect single-valued" name="MimSyncMVAttributeType - calling Test-TargetResource Directly.MimSyncMVAttributeType - incorrect single-valued" time="0.076" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVAttributeType - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1346" asserts="0" description="MimSyncMVAttributeType - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing MV Attribute Type" name="MimSyncMVAttributeType - calling Get-TargetResource Directly.Existing MV Attribute Type" time="0.0697" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing MV Attribute Type - Syntax" name="MimSyncMVAttributeType - calling Get-TargetResource Directly.Existing MV Attribute Type - Syntax" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing MV Attribute Type" name="MimSyncMVAttributeType - calling Get-TargetResource Directly.Missing MV Attribute Type" time="0.0265" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVDeletionRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.4806" asserts="0" description="MimSyncMVDeletionRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncMVDeletionRule - desired state" name="MimSyncMVDeletionRule - calling Test-TargetResource Directly.MimSyncMVDeletionRule - desired state" time="0.3871" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVDeletionRule - incorrect type" name="MimSyncMVDeletionRule - calling Test-TargetResource Directly.MimSyncMVDeletionRule - incorrect type" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVDeletionRule - incorrect MVObjectType" name="MimSyncMVDeletionRule - calling Test-TargetResource Directly.MimSyncMVDeletionRule - incorrect MVObjectType" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVDeletionRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.0665" asserts="0" description="MimSyncMVDeletionRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Expected MimSyncMVDeletionRule" name="MimSyncMVDeletionRule - calling Get-TargetResource Directly.Expected MimSyncMVDeletionRule" time="0.0665" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVObjectType - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.7683" asserts="0" description="MimSyncMVObjectType - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncMVObjectType - desired state" name="MimSyncMVObjectType - calling Test-TargetResource Directly.MimSyncMVObjectType - desired state" time="0.4181" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVObjectType - missing attributes" name="MimSyncMVObjectType - calling Test-TargetResource Directly.MimSyncMVObjectType - missing attributes" time="0.1621" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVObjectType - one attribute required set to true" name="MimSyncMVObjectType - calling Test-TargetResource Directly.MimSyncMVObjectType - one attribute required set to true" time="0.1882" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVObjectType - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1999" asserts="0" description="MimSyncMVObjectType - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing MV Object Type" name="MimSyncMVObjectType - calling Get-TargetResource Directly.Existing MV Object Type" time="0.1055" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing MV Object Type - Type" name="MimSyncMVObjectType - calling Get-TargetResource Directly.Existing MV Object Type - Type" time="0.0679" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing MV Object Type" name="MimSyncMVObjectType - calling Get-TargetResource Directly.Missing MV Object Type" time="0.0265" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVOptions - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.4314" asserts="0" description="MimSyncMVOptions - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncMVOptions - desired state" name="MimSyncMVOptions - calling Test-TargetResource Directly.MimSyncMVOptions - desired state" time="0.3093" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVOptions - incorrect ExtensionAssemblyName" name="MimSyncMVOptions - calling Test-TargetResource Directly.MimSyncMVOptions - incorrect ExtensionAssemblyName" time="0.0688" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncMVOptions - incorrect ProvisioningType" name="MimSyncMVOptions - calling Test-TargetResource Directly.MimSyncMVOptions - incorrect ProvisioningType" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncMVOptions - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.065" asserts="0" description="MimSyncMVOptions - calling Get-TargetResource Directly">
        <results>
          <test-case description="Expected MimSyncMVOptions" name="MimSyncMVOptions - calling Get-TargetResource Directly.Expected MimSyncMVOptions" time="0.065" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncProjectionRule - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="0.4614" asserts="0" description="MimSyncProjectionRule - calling Test-TargetResource Directly">
        <results>
          <test-case description="Declared Projection Rule - desired state" name="MimSyncProjectionRule - calling Test-TargetResource Directly.Declared Projection Rule - desired state" time="0.3219" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Declared Projection Rule - incorrect MVObjectType" name="MimSyncProjectionRule - calling Test-TargetResource Directly.Declared Projection Rule - incorrect MVObjectType" time="0.052" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted Projection Rule - desired state" name="MimSyncProjectionRule - calling Test-TargetResource Directly.Scripted Projection Rule - desired state" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Scripted Projection Rule - missing rule" name="MimSyncProjectionRule - calling Test-TargetResource Directly.Scripted Projection Rule - missing rule" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncProjectionRule - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1153" asserts="0" description="MimSyncProjectionRule - calling Get-TargetResource Directly">
        <results>
          <test-case description="Missing Projection Rule" name="MimSyncProjectionRule - calling Get-TargetResource Directly.Missing Projection Rule" time="0.0864" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Expected Projection Rule" name="MimSyncProjectionRule - calling Get-TargetResource Directly.Expected Projection Rule" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncRunProfile - calling Test-TargetResource Directly" executed="True" result="Success" success="True" time="5.4997" asserts="0" description="MimSyncRunProfile - calling Test-TargetResource Directly">
        <results>
          <test-case description="MimSyncRunProfile - desired state" name="MimSyncRunProfile - calling Test-TargetResource Directly.MimSyncRunProfile - desired state" time="1.9894" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncRunProfile - incorrect step type" name="MimSyncRunProfile - calling Test-TargetResource Directly.MimSyncRunProfile - incorrect step type" time="1.7922" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncRunProfile - incorrect input file" name="MimSyncRunProfile - calling Test-TargetResource Directly.MimSyncRunProfile - incorrect input file" time="1.6806" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="MimSyncRunProfile - missing run profile" name="MimSyncRunProfile - calling Test-TargetResource Directly.MimSyncRunProfile - missing run profile" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="MimSyncRunProfile - calling Get-TargetResource Directly" executed="True" result="Success" success="True" time="0.1815" asserts="0" description="MimSyncRunProfile - calling Get-TargetResource Directly">
        <results>
          <test-case description="Existing Run Profile" name="MimSyncRunProfile - calling Get-TargetResource Directly.Existing Run Profile" time="0.0888" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Existing Run Profile - RunSteps" name="MimSyncRunProfile - calling Get-TargetResource Directly.Existing Run Profile - RunSteps" time="0.0584" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Missing Run Profile" name="MimSyncRunProfile - calling Get-TargetResource Directly.Missing Run Profile" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>